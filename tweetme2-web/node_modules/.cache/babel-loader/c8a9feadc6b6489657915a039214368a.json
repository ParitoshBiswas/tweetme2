{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\Projects\\\\Twitter-like App\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TweetsList } from './list';\nimport { apiTweetCreate } from './lookup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetCreate(props) {\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const {\n    didTweet\n  } = props;\n\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textAreaRef,\n        required: true,\n        className: \"form-control\",\n        name: \"tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary my-3\",\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n_c = TweetCreate;\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = props.canTweet === \"false\" ? false : true;\n\n  const handleBackendUpdate = newTweet => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"An error occured please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [canTweet === true && /*#__PURE__*/_jsxDEV(TweetCreate, {\n      className: \"col-12 mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c2 = TweetsComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TweetCreate\");\n$RefreshReg$(_c2, \"TweetsComponent\");","map":{"version":3,"names":["React","useState","TweetsList","apiTweetCreate","TweetCreate","props","textAreaRef","createRef","didTweet","handleBackendUpdate","response","status","tempNewTweets","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsComponent","newTweets","setNewTweets","canTweet","newTweet","unshift"],"sources":["F:/Programming/Projects/Twitter-like App/tweetme2/tweetme2-web/src/tweets/components.js"],"sourcesContent":["import React, {useState} from \"react\"\r\n\r\nimport { TweetsList } from './list'\r\nimport { apiTweetCreate } from './lookup'\r\n\r\nfunction TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201){\r\n      didTweet(tempNewTweets)\r\n    } else{\r\n      console.log(response)\r\n      alert(\"An error occured please try again\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n  return <div className={props.className}>\r\n        <form onSubmit={handleSubmit}>\r\n         <textarea ref={textAreaRef} required={true} className=\"form-control\" name=\"tweet\">\r\n\r\n         </textarea>\r\n         <button type=\"submit\" className=\"btn btn-primary my-3\">Tweet</button>\r\n        </form>\r\n      </div>\r\n}\r\n\r\n\r\nexport function TweetsComponent(props) {\r\n  const textAreaRef = React.createRef()\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleBackendUpdate = (newTweet) => {\r\n    // backend api response handler\r\n    let tempNewTweets = [...newTweets]\r\n    if (status === 201){\r\n      tempNewTweets.unshift(response)\r\n      setNewTweets(tempNewTweets)\r\n    } else{\r\n      console.log(response)\r\n      alert(\"An error occured please try again\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate className=\"col-12 mb-3\" />}\r\n          <TweetsList newTweets={newTweets} {...props} />\r\n         </div>\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,cAAT,QAA+B,UAA/B;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;EACzB,MAAMC,WAAW,gBAAGN,KAAK,CAACO,SAAN,EAApB;EACA,MAAM;IAACC;EAAD,IAAaH,KAAnB;;EACA,MAAMI,mBAAmB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;IAChD,IAAIA,MAAM,KAAK,GAAf,EAAmB;MACjBH,QAAQ,CAACI,aAAD,CAAR;IACD,CAFD,MAEM;MACJC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;MACAK,KAAK,CAAC,mCAAD,CAAL;IACD;EACF,CAPD;;EASA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;IACA,MAAMC,MAAM,GAAGb,WAAW,CAACc,OAAZ,CAAoBC,KAAnC,CAF8B,CAG9B;;IACAlB,cAAc,CAACgB,MAAD,EAASV,mBAAT,CAAd;IACAH,WAAW,CAACc,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;EACD,CAND;;EAOA,oBAAO;IAAK,SAAS,EAAEhB,KAAK,CAACiB,SAAtB;IAAA,uBACD;MAAM,QAAQ,EAAEN,YAAhB;MAAA,wBACC;QAAU,GAAG,EAAEV,WAAf;QAA4B,QAAQ,EAAE,IAAtC;QAA4C,SAAS,EAAC,cAAtD;QAAqE,IAAI,EAAC;MAA1E;QAAA;QAAA;QAAA;MAAA,QADD,eAIC;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,sBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJD;IAAA;MAAA;MAAA;MAAA;IAAA;EADC;IAAA;IAAA;IAAA;EAAA,QAAP;AAQD;;KA3BQF,W;AA8BT,OAAO,SAASmB,eAAT,CAAyBlB,KAAzB,EAAgC;EAAA;;EACrC,MAAMC,WAAW,gBAAGN,KAAK,CAACO,SAAN,EAApB;EACA,MAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAMyB,QAAQ,GAAGrB,KAAK,CAACqB,QAAN,KAAmB,OAAnB,GAA6B,KAA7B,GAAqC,IAAtD;;EACA,MAAMjB,mBAAmB,GAAIkB,QAAD,IAAc;IACxC;IACA,IAAIf,aAAa,GAAG,CAAC,GAAGY,SAAJ,CAApB;;IACA,IAAIb,MAAM,KAAK,GAAf,EAAmB;MACjBC,aAAa,CAACgB,OAAd,CAAsBlB,QAAtB;MACAe,YAAY,CAACb,aAAD,CAAZ;IACD,CAHD,MAGM;MACJC,OAAO,CAACC,GAAR,CAAYJ,QAAZ;MACAK,KAAK,CAAC,mCAAD,CAAL;IACD;EACF,CAVD;;EAYA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9BA,KAAK,CAACC,cAAN;IACA,MAAMC,MAAM,GAAGb,WAAW,CAACc,OAAZ,CAAoBC,KAAnC,CAF8B,CAG9B;;IACAlB,cAAc,CAACgB,MAAD,EAASV,mBAAT,CAAd;IACAH,WAAW,CAACc,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;EACD,CAND;;EAOA,oBAAO;IAAK,SAAS,EAAEhB,KAAK,CAACiB,SAAtB;IAAA,WACEI,QAAQ,KAAK,IAAb,iBAAqB,QAAC,WAAD;MAAa,SAAS,EAAC;IAAvB;MAAA;MAAA;MAAA;IAAA,QADvB,eAEC,QAAC,UAAD;MAAY,SAAS,EAAEF,SAAvB;MAAA,GAAsCnB;IAAtC;MAAA;MAAA;MAAA;IAAA,QAFD;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAID;;GA3BekB,e;;MAAAA,e"},"metadata":{},"sourceType":"module"}