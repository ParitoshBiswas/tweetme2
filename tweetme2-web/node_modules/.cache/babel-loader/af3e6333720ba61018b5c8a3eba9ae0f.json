{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\Projects\\\\Twitter-like App\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction loadTweets(callback) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET'; //\"POST\"\n\n  const url = \"http://localhost:8000/api/tweets\";\n  const responseType = \"json\";\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status);\n  };\n\n  xhr.onerror = function (e) {\n    console.log(e);\n    callback({\n      \"message\": \"The request was an error\"\n    }, 400);\n  };\n\n  xhr.send();\n}\n\nfunction TweetsList(props) {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, '${index}-{item.id}', false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s(TweetsList, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c = TweetsList;\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-small';\n  return action.type === 'like' ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    children: [tweet.likes, \" Likes\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 36\n  }, this) : null;\n}\n_c2 = ActionBtn;\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tweet.id, \" - \", tweet.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: tweet,\n        action: {\n          type: \"like\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n_c3 = Tweet;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TweetsList\");\n$RefreshReg$(_c2, \"ActionBtn\");\n$RefreshReg$(_c3, \"Tweet\");","map":{"version":3,"names":["React","loadTweets","callback","xhr","XMLHttpRequest","method","url","responseType","open","onload","response","status","onerror","e","console","log","send","TweetsList","props","tweets","setTweets","useState","useEffect","myCallback","alert","map","item","index","ActionBtn","tweet","action","className","type","likes","Tweet","id","content"],"sources":["F:/Programming/Projects/Twitter-like App/tweetme2/tweetme2-web/src/tweets/components.js"],"sourcesContent":["import React from \"react\"\r\n\r\nfunction loadTweets(callback){\r\n    const xhr = new XMLHttpRequest()\r\n    const method = 'GET'  //\"POST\"\r\n    const url = \"http://localhost:8000/api/tweets\"\r\n    const responseType = \"json\"\r\n    xhr.responseType = responseType\r\n    xhr.open(method, url)\r\n    xhr.onload = function(){\r\n      callback(xhr.response, xhr.status)\r\n    }\r\n    xhr.onerror = function(e){\r\n      console.log(e)\r\n      callback({\"message\": \"The request was an error\"}, 400)\r\n    }\r\n    xhr.send()\r\n  }\r\n  \r\n  \r\nfunction TweetsList(props){\r\n    const [tweets, setTweets] = useState([])\r\n  \r\n    useEffect(() => {\r\n      const myCallback = (response, status) => {\r\n        if(status === 200){\r\n          setTweets(response)\r\n        } else{\r\n          alert(\"There was an error\")\r\n        }\r\n      }\r\n      loadTweets(myCallback)    \r\n    }, [])\r\n    return tweets.map((item, index)=>{\r\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={'${index}-{item.id}'}/>\r\n    })\r\n  }\r\n\r\nexport function ActionBtn(props){\r\n    const {tweet, action} = props\r\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\r\n    return action.type ==='like' ? <button className={className}>{tweet.likes} Likes</button> : null\r\n  }\r\n  \r\nexport function Tweet(props){\r\n    const {tweet} = props\r\n    const className = props.className ? props.className : \"col-10 mx-auto col-md-6\"\r\n    return <div className={className}>\r\n      <p>{tweet.id} - {tweet.content}</p>\r\n      <div className='btn btn-group'>\r\n        <ActionBtn tweet={tweet} action={{type: \"like\"}}/>\r\n      </div>\r\n    </div>\r\n  }"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA6B;EACzB,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;EACA,MAAMC,MAAM,GAAG,KAAf,CAFyB,CAEH;;EACtB,MAAMC,GAAG,GAAG,kCAAZ;EACA,MAAMC,YAAY,GAAG,MAArB;EACAJ,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;EACAJ,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;EACAH,GAAG,CAACM,MAAJ,GAAa,YAAU;IACrBP,QAAQ,CAACC,GAAG,CAACO,QAAL,EAAeP,GAAG,CAACQ,MAAnB,CAAR;EACD,CAFD;;EAGAR,GAAG,CAACS,OAAJ,GAAc,UAASC,CAAT,EAAW;IACvBC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACAX,QAAQ,CAAC;MAAC,WAAW;IAAZ,CAAD,EAA0C,GAA1C,CAAR;EACD,CAHD;;EAIAC,GAAG,CAACa,IAAJ;AACD;;AAGH,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAG,CAACb,QAAD,EAAWC,MAAX,KAAsB;MACvC,IAAGA,MAAM,KAAK,GAAd,EAAkB;QAChBS,SAAS,CAACV,QAAD,CAAT;MACD,CAFD,MAEM;QACJc,KAAK,CAAC,oBAAD,CAAL;MACD;IACF,CAND;;IAOAvB,UAAU,CAACsB,UAAD,CAAV;EACD,CATQ,EASN,EATM,CAAT;EAUA,OAAOJ,MAAM,CAACM,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAe;IAC/B,oBAAO,QAAC,KAAD;MAAO,KAAK,EAAED,IAAd;MAAoB,SAAS,EAAC;IAA9B,GAAyE,oBAAzE;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAFM,CAAP;AAGD;;GAhBMT,U;;KAAAA,U;AAkBT,OAAO,SAASW,SAAT,CAAmBV,KAAnB,EAAyB;EAC5B,MAAM;IAACW,KAAD;IAAQC;EAAR,IAAkBZ,KAAxB;EACA,MAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,2BAAtD;EACA,OAAOD,MAAM,CAACE,IAAP,KAAe,MAAf,gBAAwB;IAAQ,SAAS,EAAED,SAAnB;IAAA,WAA+BF,KAAK,CAACI,KAArC;EAAA;IAAA;IAAA;IAAA;EAAA,QAAxB,GAAqF,IAA5F;AACD;MAJaL,S;AAMhB,OAAO,SAASM,KAAT,CAAehB,KAAf,EAAqB;EACxB,MAAM;IAACW;EAAD,IAAUX,KAAhB;EACA,MAAMa,SAAS,GAAGb,KAAK,CAACa,SAAN,GAAkBb,KAAK,CAACa,SAAxB,GAAoC,yBAAtD;EACA,oBAAO;IAAK,SAAS,EAAEA,SAAhB;IAAA,wBACL;MAAA,WAAIF,KAAK,CAACM,EAAV,SAAiBN,KAAK,CAACO,OAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QADK,eAEL;MAAK,SAAS,EAAC,eAAf;MAAA,uBACE,QAAC,SAAD;QAAW,KAAK,EAAEP,KAAlB;QAAyB,MAAM,EAAE;UAACG,IAAI,EAAE;QAAP;MAAjC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAMD;MATaE,K"},"metadata":{},"sourceType":"module"}