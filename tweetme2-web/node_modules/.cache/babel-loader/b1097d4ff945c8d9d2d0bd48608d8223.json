{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\Projects\\\\Twitter-Like-App\\\\tweetme2\\\\tweetme2-web\\\\src\\\\tweets\\\\list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { apiTweetList } from './lookup';\nimport { Tweet } from \"./detail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsList(props) {\n  _s();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [nextUrl, setNextTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response.results);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = newTweet => {\n    const updateTweetsInit = [...tweetsInit];\n    updateTweetsInit.unshift(newTweet);\n    setTweetsInit(updateTweetsInit);\n    const updateFinalTweets = [...tweets];\n    updateFinalTweets.unshift(tweets);\n    setTweets(updateFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-{item.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this);\n  });\n}\n\n_s(TweetsList, \"+kKMb+Gc4o9DEQYIYdSdKB0kmS4=\");\n\n_c = TweetsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetsList\");","map":{"version":3,"names":["React","useEffect","useState","apiTweetList","Tweet","TweetsList","props","tweetsInit","setTweetsInit","tweets","setTweets","nextUrl","setNextTweets","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","results","alert","username","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index"],"sources":["F:/Programming/Projects/Twitter-Like-App/tweetme2/tweetme2-web/src/tweets/list.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\r\n\r\nimport { apiTweetList } from './lookup'\r\nimport { Tweet } from \"./detail\"\r\n\r\nexport function TweetsList(props){\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextTweets] = useState([])\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if(tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if(status === 200){\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else{\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }   \r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    } \r\n    return tweets.map((item, index)=>{\r\n      return <Tweet \r\n        tweet={item}\r\n        didRetweet = {handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`}/>\r\n    })\r\n  }"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA0B;EAAA;;EAC7B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACS,OAAD,EAAUC,aAAV,IAA2BV,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;EACAD,SAAS,CAAC,MAAI;IACZ,MAAMc,KAAK,GAAG,CAAC,GAAGT,KAAK,CAACU,SAAV,EAAqBC,MAArB,CAA4BV,UAA5B,CAAd;;IACA,IAAIQ,KAAK,CAACG,MAAN,KAAiBT,MAAM,CAACS,MAA5B,EAAoC;MAClCR,SAAS,CAACK,KAAD,CAAT;IACD;EACF,CALQ,EAKN,CAACT,KAAK,CAACU,SAAP,EAAkBP,MAAlB,EAA0BF,UAA1B,CALM,CAAT;EAOAN,SAAS,CAAC,MAAM;IACd,IAAGY,YAAY,KAAK,KAApB,EAA0B;MACxB,MAAMM,qBAAqB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;QAClD,IAAGA,MAAM,KAAK,GAAd,EAAkB;UAChBb,aAAa,CAACY,QAAQ,CAACE,OAAV,CAAb;UACAR,eAAe,CAAC,IAAD,CAAf;QACD,CAHD,MAGM;UACJS,KAAK,CAAC,oBAAD,CAAL;QACD;MACF,CAPD;;MAQApB,YAAY,CAACG,KAAK,CAACkB,QAAP,EAAiBL,qBAAjB,CAAZ;IACD;EACF,CAZQ,EAYN,CAACZ,UAAD,EAAaM,YAAb,EAA2BC,eAA3B,EAA4CR,KAAK,CAACkB,QAAlD,CAZM,CAAT;;EAeA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;IACrC,MAAMC,gBAAgB,GAAG,CAAC,GAAGpB,UAAJ,CAAzB;IACAoB,gBAAgB,CAACC,OAAjB,CAAyBF,QAAzB;IACAlB,aAAa,CAACmB,gBAAD,CAAb;IACA,MAAME,iBAAiB,GAAG,CAAC,GAAGpB,MAAJ,CAA1B;IACAoB,iBAAiB,CAACD,OAAlB,CAA0BnB,MAA1B;IACAC,SAAS,CAACmB,iBAAD,CAAT;EACD,CAPD;;EAQA,OAAOpB,MAAM,CAACqB,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAe;IAC/B,oBAAO,QAAC,KAAD;MACL,KAAK,EAAED,IADF;MAEL,UAAU,EAAIN,gBAFT;MAGL,SAAS,EAAC;IAHL,GAIC,GAAEO,KAAM,YAJT;MAAA;MAAA;MAAA;IAAA,QAAP;EAKD,CANM,CAAP;AAOD;;GA1Ca3B,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}